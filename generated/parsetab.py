
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN COMMA DBLOCK_END DBLOCK_START DO DOT ENDFOR ENDIF FOR ID IF IN LPAREN PRINT QUOTE RPAREN SEMICOLON STRING TXTprogramme : TXT\n               | TXT programmeprogramme : dumbo_block\n               | dumbo_block programmedumbo_block : DBLOCK_START expression_list DBLOCK_END\n                   | DBLOCK_START DBLOCK_ENDexpression_list : expression\n                       | expression expression_listexpression : ID ASSIGN stringexpr SEMICOLON\n                  | ID ASSIGN stringlst SEMICOLONstringexpr : STRING\n                  | ID\n                  | stringexpr DOT stringexprstringlst : LPAREN stringlst_interior RPARENstringlst_interior : stringexpr\n                          | stringexpr COMMA stringlst_interior'
    
_lr_action_items = {'TXT':([0,2,3,8,11,],[2,2,2,-6,-5,]),'DBLOCK_START':([0,2,3,8,11,],[4,4,4,-6,-5,]),'$end':([1,2,3,5,6,8,11,],[0,-1,-3,-2,-4,-6,-5,]),'DBLOCK_END':([4,7,9,12,19,21,],[8,11,-7,-8,-9,-10,]),'ID':([4,9,13,18,19,20,21,26,],[10,10,14,14,-9,14,-10,14,]),'ASSIGN':([10,],[13,]),'STRING':([13,18,20,26,],[17,17,17,17,]),'LPAREN':([13,],[18,]),'SEMICOLON':([14,15,16,17,24,25,],[-12,19,21,-11,-13,-14,]),'DOT':([14,15,17,23,24,],[-12,20,-11,20,20,]),'COMMA':([14,17,23,24,],[-12,-11,26,-13,]),'RPAREN':([14,17,22,23,24,27,],[-12,-11,25,-15,-13,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,2,3,],[1,5,6,]),'dumbo_block':([0,2,3,],[3,3,3,]),'expression_list':([4,9,],[7,12,]),'expression':([4,9,],[9,9,]),'stringexpr':([13,18,20,26,],[15,23,24,23,]),'stringlst':([13,],[16,]),'stringlst_interior':([18,26,],[22,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> TXT','programme',1,'p_programme_txt','syntaxer.py',8),
  ('programme -> TXT programme','programme',2,'p_programme_txt','syntaxer.py',9),
  ('programme -> dumbo_block','programme',1,'p_programme_dumbo','syntaxer.py',17),
  ('programme -> dumbo_block programme','programme',2,'p_programme_dumbo','syntaxer.py',18),
  ('dumbo_block -> DBLOCK_START expression_list DBLOCK_END','dumbo_block',3,'p_dumbo_block','syntaxer.py',25),
  ('dumbo_block -> DBLOCK_START DBLOCK_END','dumbo_block',2,'p_dumbo_block','syntaxer.py',26),
  ('expression_list -> expression','expression_list',1,'p_expression_list','syntaxer.py',33),
  ('expression_list -> expression expression_list','expression_list',2,'p_expression_list','syntaxer.py',34),
  ('expression -> ID ASSIGN stringexpr SEMICOLON','expression',4,'p_expression_assign_stringexpr_or_stringlst','syntaxer.py',41),
  ('expression -> ID ASSIGN stringlst SEMICOLON','expression',4,'p_expression_assign_stringexpr_or_stringlst','syntaxer.py',42),
  ('stringexpr -> STRING','stringexpr',1,'p_stringexpr','syntaxer.py',46),
  ('stringexpr -> ID','stringexpr',1,'p_stringexpr','syntaxer.py',47),
  ('stringexpr -> stringexpr DOT stringexpr','stringexpr',3,'p_stringexpr','syntaxer.py',48),
  ('stringlst -> LPAREN stringlst_interior RPAREN','stringlst',3,'p_stringlst','syntaxer.py',55),
  ('stringlst_interior -> stringexpr','stringlst_interior',1,'p_stringlst_interior','syntaxer.py',60),
  ('stringlst_interior -> stringexpr COMMA stringlst_interior','stringlst_interior',3,'p_stringlst_interior','syntaxer.py',61),
]
